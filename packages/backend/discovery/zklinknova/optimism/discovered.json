{
  "name": "zklinknova",
  "chain": "optimism",
  "blockNumber": 118270613,
  "configHash": "0x8607a3d4b2db7680dab4b711ab52a0a4ab3b73d8bff7ec003eae8de6daf8648b",
  "version": 3,
  "contracts": [
    {
      "name": "zkLink",
      "address": "0x46C8D02E93d5a03899dFa7Cf8A40A07589A3fA1b",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xebdA7f097EF976e8E82FA11F05ef1906f3068105",
        "admin": "0x0000000000000000000000000000000000000000"
      },
      "implementations": ["0xebdA7f097EF976e8E82FA11F05ef1906f3068105"],
      "sinceTimestamp": 1711092485,
      "values": {
        "feeParams": [0, 1000000, 120000, 80000000, 99000, 250000000],
        "FORWARD_REQUEST_TYPE_HASH": "0xe0aaca1722ef50bb0c9b032e5b16ce2b79fa9f23638835456b27fd6894f8292c",
        "forwardFeeAllocator": "0x0000000000000000000000000000000000000000",
        "gateway": "0xaD5d729291C0d6A299E370814CA6Ce1c8C25b51c",
        "getGateway": "0xaD5d729291C0d6A299E370814CA6Ce1c8C25b51c",
        "getGovernor": "0x344A908d1a7b7d06B7AD7169C1db81fc9d496dE9",
        "getPriorityTxMaxGasLimit": 72000000,
        "getTotalBatchesExecuted": 0,
        "getTotalPriorityTxs": 1555,
        "IS_ETH_GAS_TOKEN": true,
        "owner": "0x344A908d1a7b7d06B7AD7169C1db81fc9d496dE9",
        "paused": false,
        "totalBatchesExecuted": 0,
        "totalPriorityTxs": 1555,
        "totalSyncedPriorityTxs": 0,
        "totalValidatorForwardFee": "1165669842640088555",
        "totalValidatorForwardFeeWithdrawn": 0,
        "txGasPrice": 40000000000
      },
      "derivedName": "ZkLink"
    },
    {
      "name": "L1ERC20Bridge",
      "address": "0x5Bd51296423A9079b931414C1De65e7057326EaA",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x683669E5B6cDc6636673a5f7ddB68E20812216F5",
        "admin": "0xA688B4E1375Ed6b9129dF4959da4a271B33e50a4"
      },
      "implementations": ["0x683669E5B6cDc6636673a5f7ddB68E20812216F5"],
      "sinceTimestamp": 1711095511,
      "values": {
        "l2Bridge": "0x6aAdaA7Bf9F5283cAF3eb2E40573D1A4d02C8B15",
        "l2TokenBeacon": "0xC9c41965710Dcc1434A7B7d44dAf6A4418E2C27d",
        "l2TokenProxyBytecodeHash": "0x010001211b0c33353cdf7a320f768e3dc40bce1326d639fcac099bba9ecd8e34"
      },
      "derivedName": "L1ERC20Bridge"
    },
    {
      "name": "ProxyAdmin",
      "address": "0xA688B4E1375Ed6b9129dF4959da4a271B33e50a4",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1711095511,
      "values": {
        "owner": "0x344A908d1a7b7d06B7AD7169C1db81fc9d496dE9",
        "UPGRADE_INTERFACE_VERSION": "5.0.0"
      }
    },
    {
      "name": "OptimismL2Gateway",
      "address": "0xaD5d729291C0d6A299E370814CA6Ce1c8C25b51c",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x3C3f4b866f8c6F0D2c912feE36D5Ad337a9AA98e",
        "admin": "0x0000000000000000000000000000000000000000"
      },
      "implementations": ["0x3C3f4b866f8c6F0D2c912feE36D5Ad337a9AA98e"],
      "sinceTimestamp": 1711092577,
      "values": {
        "getRemoteGateway": "0x668e8F67adB8219e1816C2E5bBEa055A78AF3026",
        "MESSAGE_SERVICE": "0x4200000000000000000000000000000000000007",
        "owner": "0x344A908d1a7b7d06B7AD7169C1db81fc9d496dE9",
        "ZKLINK": "0x46C8D02E93d5a03899dFa7Cf8A40A07589A3fA1b"
      },
      "derivedName": "OptimismL2Gateway"
    }
  ],
  "eoas": [
    "0x344A908d1a7b7d06B7AD7169C1db81fc9d496dE9",
    "0x668e8F67adB8219e1816C2E5bBEa055A78AF3026",
    "0x6aAdaA7Bf9F5283cAF3eb2E40573D1A4d02C8B15",
    "0xC9c41965710Dcc1434A7B7d44dAf6A4418E2C27d"
  ],
  "abis": {
    "0x3C3f4b866f8c6F0D2c912feE36D5Ad337a9AA98e": [
      "constructor(address _zkLink)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event L2GatewayMessageSent(uint256 value, bytes callData)",
      "event NewRemoteGateway(address remoteGateWay)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function MESSAGE_SERVICE() view returns (address)",
      "function ZKLINK() view returns (address)",
      "function claimMessageCallback(uint256 _value, bytes _callData) payable",
      "function getRemoteGateway() view returns (address)",
      "function initialize()",
      "function owner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function sendMessage(uint256 _value, bytes _callData) payable",
      "function setRemoteGateway(address _remoteGateway)",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x46C8D02E93d5a03899dFa7Cf8A40A07589A3fA1b": [
      "constructor(address implementation, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "event Upgraded(address indexed implementation)"
    ],
    "0x5Bd51296423A9079b931414C1De65e7057326EaA": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x683669E5B6cDc6636673a5f7ddB68E20812216F5": [
      "constructor(address _zkSync)",
      "event ClaimedFailedDeposit(address indexed to, address indexed l1Token, uint256 amount)",
      "event DepositInitiated(bytes32 indexed l2DepositTxHash, address indexed from, address indexed to, address l1Token, uint256 amount)",
      "event WithdrawalFinalized(address indexed to, address indexed l1Token, uint256 amount)",
      "function claimFailedDeposit(address _depositSender, address _l1Token, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte) payable returns (bytes32 l2TxHash)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte, address _refundRecipient) payable returns (bytes32 l2TxHash)",
      "function finalizeWithdrawal(uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof)",
      "function initialize(bytes[] _factoryDeps, bytes32[] _factoryDepByteCodeHashes, address _l2TokenBeacon, address _governor, uint256 _deployBridgeImplementationFee, uint256 _deployBridgeProxyFee) payable",
      "function isWithdrawalFinalized(uint256 l2BatchNumber, uint256 l2ToL1MessageNumber) view returns (bool isFinalized)",
      "function l2Bridge() view returns (address)",
      "function l2TokenAddress(address _l1Token) view returns (address)",
      "function l2TokenBeacon() view returns (address)",
      "function l2TokenProxyBytecodeHash() view returns (bytes32)"
    ],
    "0xA688B4E1375Ed6b9129dF4959da4a271B33e50a4": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xaD5d729291C0d6A299E370814CA6Ce1c8C25b51c": [
      "constructor(address implementation, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "event Upgraded(address indexed implementation)"
    ],
    "0xebdA7f097EF976e8E82FA11F05ef1906f3068105": [
      "constructor(bool _isEthGasToken)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ContractAllowStatusUpdate(address indexed contractAddress, bool isPermit)",
      "event EthWithdrawalFinalized(address indexed to, uint256 amount)",
      "event ForwardFeeAllocatorUpdate(address oldAllocator, address newAllocator)",
      "event InitGateway(address indexed gateway)",
      "event Initialized(uint8 version)",
      "event NewFeeParams(tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) oldFeeParams, tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) newFeeParams)",
      "event NewPriorityRequest(uint256 priorityOpId, tuple(address gateway, bool isContractCall, address sender, uint256 txId, address contractAddressL2, uint256 l2Value, bytes l2CallData, uint256 l2GasLimit, uint256 l2GasPricePerPubdata, bytes[] factoryDeps, address refundRecipient) l2Request)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event SyncBatchRoot(uint256 batchNumber, bytes32 l2LogsRootHash, uint256 forwardEthAmount)",
      "event SyncL2Requests(uint256 totalSyncedPriorityTxs, bytes32 syncHash, uint256 forwardEthAmount)",
      "event SyncL2TxHash(bytes32 l2TxHash, bytes32 primaryChainL2TxHash)",
      "event TxGasPriceUpdate(uint256 oldTxGasPrice, uint256 newTxGasPrice)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "event ValidatorStatusUpdate(address indexed validatorAddress, bool isActive)",
      "event WithdrawForwardFee(address indexed receiver, uint256 amount)",
      "function FORWARD_REQUEST_TYPE_HASH() view returns (bytes32)",
      "function IS_ETH_GAS_TOKEN() view returns (bool)",
      "function allowLists(address contractAddress) view returns (bool isPermitToSendL2Request)",
      "function changeFeeParams(tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) _newFeeParams)",
      "function feeParams() view returns (uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice)",
      "function finalizeEthWithdrawal(uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof)",
      "function forwardFeeAllocator() view returns (address)",
      "function gateway() view returns (address)",
      "function getGateway() view returns (address)",
      "function getGovernor() view returns (address)",
      "function getPriorityTxMaxGasLimit() pure returns (uint256)",
      "function getTotalBatchesExecuted() view returns (uint256)",
      "function getTotalPriorityTxs() view returns (uint256)",
      "function initialize()",
      "function isEthWithdrawalFinalized(uint256 l2BatchNumber, uint256 l2ToL1MessageNumber) view returns (bool isFinalized)",
      "function isValidator(address _address) view returns (bool)",
      "function l2LogsRootHash(uint256 _batchNumber) view returns (bytes32 merkleRoot)",
      "function l2LogsRootHashes(uint256 batchNumber) view returns (bytes32 l2LogsRootHash)",
      "function l2TransactionBaseCost(uint256 _gasPrice, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit) view returns (uint256)",
      "function l2TxHashMap(bytes32 l2TxHash) view returns (bytes32 primaryChainL2TxHash)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function priorityOpSyncStatus(uint256 priorityOpId) view returns (bytes32 hash, uint256 amount)",
      "function proveL1ToL2TransactionStatus(bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof, uint8 _status) view returns (bool)",
      "function proveL2MessageInclusion(uint256 _batchNumber, uint256 _index, tuple(uint16 txNumberInBatch, address sender, bytes data) _message, bytes32[] _proof) view returns (bool)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function requestL2Transaction(address _contractL2, uint256 _l2Value, bytes _calldata, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit, bytes[] _factoryDeps, address _refundRecipient) payable returns (bytes32 canonicalTxHash)",
      "function setAllowList(address _contractAddress, bool _permitted)",
      "function setForwardFeeAllocator(address _newForwardFeeAllocator)",
      "function setGateway(address _gateway)",
      "function setTxGasPrice(uint256 _newTxGasPrice)",
      "function setValidator(address _validator, bool _active)",
      "function syncBatchRoot(uint256 _batchNumber, bytes32 _l2LogsRootHash, uint256 _forwardEthAmount) payable",
      "function syncL2Requests(uint256 _newTotalSyncedPriorityTxs) payable",
      "function syncL2TxHash(bytes32 _l2TxHash, bytes32 _primaryChainL2TxHash)",
      "function totalBatchesExecuted() view returns (uint256)",
      "function totalPriorityTxs() view returns (uint256)",
      "function totalSyncedPriorityTxs() view returns (uint256)",
      "function totalValidatorForwardFee() view returns (uint256)",
      "function totalValidatorForwardFeeWithdrawn() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function txGasPrice() view returns (uint256)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function validators(address validatorAddress) view returns (bool isValidator)",
      "function withdrawForwardFee(address _receiver, uint256 _amount)"
    ]
  }
}
